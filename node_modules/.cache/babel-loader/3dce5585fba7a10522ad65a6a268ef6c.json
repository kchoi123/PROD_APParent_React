{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\kevin\\\\Desktop\\\\apparent_test\\\\heroku\\\\PROD_APParent_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\kevin\\\\Desktop\\\\apparent_test\\\\heroku\\\\PROD_APParent_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kevin\\\\Desktop\\\\apparent_test\\\\heroku\\\\PROD_APParent_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kevin\\\\Desktop\\\\apparent_test\\\\heroku\\\\PROD_APParent_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kevin\\\\Desktop\\\\apparent_test\\\\heroku\\\\PROD_APParent_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kevin\\\\Desktop\\\\apparent_test\\\\heroku\\\\PROD_APParent_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Desktop\\\\apparent_test\\\\heroku\\\\PROD_APParent_React\\\\src\\\\components\\\\signUp-Form\\\\index.js\";\n// import all the dependencies\nimport React, { Component } from \"react\";\nimport { FormAction, FormLabel, FormButton, FormMessage, Dropdown, OptionForDropdown } from \"../form\";\nimport AddSchool from \"../add-school\";\nimport ErrorMessage from \"../errorMessage\";\nimport \"./style.css\";\nimport API from \"../../utils/API\";\nimport gradeLevel from \"../../gradeLevel.json\";\nimport Dropzone from \"../drop-zone\";\nvar statesList = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"]; // define a class SignUp to create the component\n\nvar SignUp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignUp, _Component);\n\n  function SignUp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignUp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      sizeDropdownState: 1,\n      sizeDropdownGrade: 1,\n      sizeDropdownSchool: 1,\n      allUsernames: [],\n      allEmails: [],\n      parentInfo: [{\n        for: \"userName\",\n        label: \"Enter a username\",\n        placeholder: \"username\",\n        value: \"\"\n      }, {\n        for: \"password\",\n        label: \"Enter your password (at least 8 characters)\",\n        placeholder: \"password\",\n        value: \"\"\n      }, {\n        for: \"email\",\n        label: \"Enter your email\",\n        placeholder: \"example@email.com\",\n        value: \"\"\n      }, {\n        for: \"photo\",\n        label: \"Enter a link for your profile picture\",\n        placeholder: \"https://www.picture-of-me.png\",\n        value: \"\"\n      }, {\n        for: \"city\",\n        label: \"Which city do you live in?\",\n        placeholder: \"city\",\n        value: \"\"\n      }, {\n        for: \"state\",\n        label: \"Which state do you live in?\",\n        value: \"Alabama\",\n        options: statesList\n      }],\n      kidInfo: [{\n        for: \"name\",\n        label: \"Enter the name of your kid\",\n        placeholder: \"kid's name\",\n        value: \"\"\n      }, {\n        for: \"grade\",\n        label: \"Which grade is your kid in?\",\n        value: \"1\",\n        options: gradeLevel\n      }, {\n        for: \"school\",\n        label: \"Which school does your kid go to?\",\n        value: \"1\",\n        options: []\n      }],\n      numberOfKid: 1,\n      allKidsInfo: [],\n      formMessage: {\n        message: \"Already Have An Account?\",\n        action: \"Login\",\n        alt: \"login\"\n      },\n      hasError: false,\n      firstStepRegistration: true,\n      passwordTooShort: false,\n      usernameAlreadyExists: false,\n      emailAlreadyExists: false,\n      emailNotCorrectFormat: false,\n      addKid: false,\n      addSchool: false,\n      messageSchoolAdded: false\n    };\n\n    _this.handleInputChangeParent = function (event) {\n      var value = event.target.value;\n      var key = event.target.getAttribute(\"data-id\");\n\n      var copy = _toConsumableArray(_this.state.parentInfo);\n\n      copy[key].value = value;\n\n      _this.setState({\n        parentInfo: copy,\n        sizeDropdownState: 1\n      });\n    };\n\n    _this.handleImageChange = function (url) {\n      var copy = _toConsumableArray(_this.state.parentInfo);\n\n      copy[3].value = url;\n\n      _this.setState({\n        parentInfo: copy\n      });\n    };\n\n    _this.handleContinueButtonClick = function (event) {\n      event.preventDefault(); // if all the fields have been filled up\n\n      if (_this.state.parentInfo[0].value && _this.state.parentInfo[1].value && _this.state.parentInfo[2].value && _this.state.parentInfo[3].value && _this.state.parentInfo[4].value && _this.state.parentInfo[5].value) {\n        // if username doesn't already exist in the database\n        if (_this.state.allUsernames.indexOf(_this.state.parentInfo[0].value) === -1) {\n          // if the email is in a correct format\n          if (/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/.test(_this.state.parentInfo[2].value)) {\n            // if the email doesn't already exist in the database\n            if (_this.state.allEmails.indexOf(_this.state.parentInfo[2].value) === -1) {\n              // if the password is at least 8 characters long\n              if (_this.state.parentInfo[1].value.length >= 8) {\n                // display the second part of the form\n                _this.setState({\n                  firstStepRegistration: false\n                });\n\n                console.log(\"parent info: \", _this.state.parentInfo); // if password too short\n              } else {\n                // display error message\n                _this.setState({\n                  passwordTooShort: true\n                });\n              } // if the email is already present in the database\n\n            } else {\n              _this.setState({\n                emailAlreadyExists: true\n              });\n            } // if the email doesn't have the correct format\n\n          } else {\n            _this.setState({\n              emailNotCorrectFormat: true\n            });\n          } // if username is already present in the database\n\n        } else {\n          // display error message\n          _this.setState({\n            usernameAlreadyExists: true\n          });\n        } // if all the fields haven't been filled up\n\n      } else {\n        // display error message\n        _this.setState({\n          hasError: true\n        });\n      }\n    };\n\n    _this.handleGoBackButtonClick = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        firstStepRegistration: true\n      });\n    };\n\n    _this.handleInputChangeKid = function (event) {\n      var value = event.target.value;\n      var key = event.target.getAttribute(\"data-id\");\n\n      var copy = _toConsumableArray(_this.state.kidInfo);\n\n      copy[key].value = value;\n\n      _this.setState({\n        kidInfo: copy,\n        sizeDropdownGrade: 1,\n        sizeDropdownSchool: 1\n      });\n    };\n\n    _this.handleAddKidButtonClick = function (event) {\n      event.preventDefault(); // if the parent clicks the \"add kid\" button after entering info for the first kid, it will proceed\n\n      if (_this.state.kidInfo[0].value && _this.state.kidInfo[1].value && _this.state.kidInfo[2].value) {\n        // copy the kidInfo\n        var copyKid = _toConsumableArray(_this.state.kidInfo); // store the current kidInfo into the allKidInfo variable\n\n\n        _this.state.allKidsInfo.push({\n          name: copyKid[0].value,\n          grade: copyKid[1].value,\n          schoolId: copyKid[2].value\n        }); // clear the fields for kid form\n\n\n        copyKid[0].value = \"\";\n        copyKid[1].value = \"1\";\n        copyKid[2].value = \"1\"; // update kidInfo to get empty fields in form, add 1 kid to the counter and \n        // display new registration form for the other kid\n\n        _this.setState({\n          kidInfo: copyKid,\n          numberOfKid: _this.state.numberOfKid + 1,\n          addKid: true,\n          messageSchoolAdded: false,\n          addSchool: false\n        }); // otherwise will get error message that the parent has to fill up the fields\n\n      } else {\n        _this.setState({\n          hasError: true\n        });\n      }\n    };\n\n    _this.handleSignUpButtonClick = function (event) {\n      event.preventDefault(); // if the parent signs up without adding another kid or after adding a the last kid - grab the only (or last) kidInfo here\n\n      var copyKid = _toConsumableArray(_this.state.kidInfo);\n\n      _this.state.allKidsInfo.push({\n        name: copyKid[0].value,\n        grade: copyKid[1].value,\n        schoolId: copyKid[2].value\n      }); // console log for checking\n\n\n      console.log(\"all kid info: \", _this.state.allKidsInfo); // the parent has to enter info in every field to be able to submit form\n\n      if (_this.state.kidInfo[0].value && _this.state.kidInfo[1].value && _this.state.kidInfo[2].value) {\n        API.signup({\n          userName: _this.state.parentInfo[0].value,\n          password: _this.state.parentInfo[1].value,\n          email: _this.state.parentInfo[2].value,\n          photoLink: _this.state.parentInfo[3].value,\n          city: _this.state.parentInfo[4].value,\n          state: _this.state.parentInfo[5].value,\n          allKidsInfo: _this.state.allKidsInfo\n        }).then(function (res) {\n          window.location.reload();\n        }).catch(function (err) {\n          return console.log(err);\n        }); // otherwise will get error message that the parent has to fill up the fields\n      } else {\n        _this.setState({\n          hasError: true\n        });\n      }\n    };\n\n    _this.handleAddSchoolOption = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        addSchool: true,\n        messageSchoolAdded: false\n      });\n    };\n\n    _this.hideAddSchoolForm = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        addSchool: false\n      });\n    };\n\n    _this.updateSchoolList = function () {\n      API.getAllSchools().then(function (res) {\n        console.log(res.data);\n\n        var copy = _toConsumableArray(_this.state.kidInfo);\n\n        copy[2].options = res.data;\n\n        _this.setState({\n          kidInfo: copy,\n          addSchool: false,\n          messageSchoolAdded: true\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleCloseButtonClick = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        hasError: false,\n        passwordTooShort: false,\n        usernameAlreadyExists: false,\n        emailAlreadyExists: false,\n        emailNotCorrectFormat: false\n      });\n    };\n\n    _this.resetError = function () {\n      if (_this.state.hasError || _this.state.passwordTooShort || _this.state.usernameAlreadyExists || _this.state.emailAlreadyExists || _this.state.emailNotCorrectFormat) {\n        setTimeout(function () {\n          _this.setState({\n            hasError: false,\n            passwordTooShort: false,\n            usernameAlreadyExists: false,\n            emailAlreadyExists: false,\n            emailNotCorrectFormat: false\n          });\n        }, 2000);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // retrieves all the schools\n      API.getAllSchools().then(function (res) {\n        console.log(res.data);\n\n        var copy = _toConsumableArray(_this2.state.kidInfo);\n\n        copy[2].options = res.data;\n\n        _this2.setState({\n          kidInfo: copy\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      }); // get the info of the parents already in the database - to check username and email\n\n      API.searchAllParentsInDB().then(function (res) {\n        console.log(res.data); // push into an array all the usernames and emails already in the database\n\n        for (var i = 0; i < res.data.length; i++) {\n          _this2.state.allUsernames.push(res.data[i].userName);\n\n          _this2.state.allEmails.push(res.data[i].email);\n        }\n\n        console.log(_this2.state.allUsernames);\n        console.log(_this2.state.allEmails);\n      });\n    } // to grab the parent's input about her/himself\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      this.resetError();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, this.state.firstStepRegistration ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, this.state.hasError ? React.createElement(ErrorMessage, {\n        message: \"Please fill out all the fields!\",\n        handleCloseButtonClick: this.handleCloseButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }) : \"\", this.state.passwordTooShort ? React.createElement(ErrorMessage, {\n        message: \"Your password should be at least 8 characters long!\",\n        handleCloseButtonClick: this.handleCloseButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }) : \"\", this.state.usernameAlreadyExists ? React.createElement(ErrorMessage, {\n        message: \"Sorry, this username is already taken!\",\n        handleCloseButtonClick: this.handleCloseButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }) : \"\", this.state.emailAlreadyExists ? React.createElement(ErrorMessage, {\n        message: \"Sorry, a parent already registered with this email!\",\n        handleCloseButtonClick: this.handleCloseButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }) : \"\", this.state.emailNotCorrectFormat ? React.createElement(ErrorMessage, {\n        message: \"Please enter a correct email!\",\n        handleCloseButtonClick: this.handleCloseButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }) : \"\", React.createElement(FormAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, this.state.parentInfo.map(function (parentInfo, i) {\n        if (parentInfo.for === \"state\") {\n          return React.createElement(Dropdown, {\n            key: i,\n            data: i,\n            for: parentInfo.for,\n            label: parentInfo.label,\n            value: parentInfo.value,\n            handleChange: _this3.handleInputChangeParent,\n            size: _this3.state.sizeDropdownState,\n            onfocus: function onfocus() {\n              _this3.setState({\n                sizeDropdownState: 5\n              });\n            },\n            onblur: function onblur() {\n              _this3.setState({\n                sizeDropdownState: 1\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 429\n            },\n            __self: this\n          }, parentInfo.options.map(function (state, j) {\n            return React.createElement(OptionForDropdown, {\n              option: state,\n              value: state,\n              key: j,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 442\n              },\n              __self: this\n            });\n          })); // return (\n          //     <FormLabel\n          //         key={i}\n          //         data={i}\n          //         for={parentInfo.for}\n          //         label={parentInfo.label}\n          //         placeholder={parentInfo.placeholder}\n          //         value={parentInfo.value}\n          //         handleChange={this.handleInputChangeParent}\n          //     />\n          // );\n        } else if (parentInfo.for === \"photo\") {\n          return React.createElement(\"div\", {\n            className: \"mb-3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 460\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 461\n            },\n            __self: this\n          }, \"Upload a profile picture (will be displayed)\"), React.createElement(Dropzone, {\n            helper: _this3.handleImageChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 462\n            },\n            __self: this\n          }));\n        } else {\n          return React.createElement(FormLabel, {\n            key: i,\n            data: i,\n            for: parentInfo.for,\n            label: parentInfo.label,\n            placeholder: parentInfo.placeholder,\n            value: parentInfo.value,\n            handleChange: _this3.handleInputChangeParent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 469\n            },\n            __self: this\n          }); // return (\n          //     <Dropdown\n          //         key={i}\n          //         data={i}\n          //         for={parentInfo.for}\n          //         label={parentInfo.label}\n          //         value={parentInfo.value}\n          //         handleChange={this.handleInputChangeParent}\n          //     >\n          //         {parentInfo.options.map((state, j) => {\n          //             return (\n          //                 <OptionForDropdown option={state} value={state} key={j} />\n          //             )\n          //         })}\n          //     </Dropdown>\n          // );\n        }\n      })), React.createElement(FormButton, {\n        nameButton: \"Continue\",\n        moreClass: \"continue-btn\",\n        icon: \"fas fa-arrow-circle-right\",\n        handleButtonClick: this.handleContinueButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }, this.state.hasError ? React.createElement(ErrorMessage, {\n        message: \"Please fill up all the fields!\",\n        handleCloseButtonClick: this.handleCloseButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }) : \"\", React.createElement(FormAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, !this.state.addKid ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"font-weight-bold mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, \"Enter information for kid #1\"), this.state.kidInfo.map(function (info, i) {\n        if (info.for === \"name\") {\n          return React.createElement(FormLabel, {\n            key: i,\n            data: i,\n            for: info.for,\n            label: info.label,\n            value: info.value,\n            handleChange: _this3.handleInputChangeKid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 523\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(Dropdown, {\n            key: i,\n            data: i,\n            for: info.for,\n            label: info.label,\n            value: info.value,\n            disabled: _this3.state.disabled,\n            handleChange: _this3.handleInputChangeKid,\n            size: info.for === \"grade\" ? _this3.state.sizeDropdownGrade : _this3.state.sizeDropdownSchool,\n            onfocus: info.for === \"grade\" ? function () {\n              _this3.setState({\n                sizeDropdownGrade: 5\n              });\n            } : function () {\n              _this3.setState({\n                sizeDropdownSchool: 5\n              });\n            },\n            onblur: info.for === \"grade\" ? function () {\n              _this3.setState({\n                sizeDropdownGrade: 1\n              });\n            } : function () {\n              _this3.setState({\n                sizeDropdownSchool: 1\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 534\n            },\n            __self: this\n          }, info.options.map(function (item, j) {\n            return React.createElement(OptionForDropdown, {\n              option: item.name,\n              value: item.id,\n              key: j,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 548\n              },\n              __self: this\n            });\n          }));\n        }\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"font-weight-bold text-success mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, \"Information saved for kid #\", this.state.numberOfKid - 1), React.createElement(\"div\", {\n        className: \"font-weight-bold mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, \" Enter information for kid #\", this.state.numberOfKid), this.state.kidInfo.map(function (info, i) {\n        if (info.for === \"name\") {\n          return React.createElement(FormLabel, {\n            key: i,\n            data: i,\n            for: info.for,\n            label: info.label,\n            value: info.value,\n            handleChange: _this3.handleInputChangeKid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 567\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(Dropdown, {\n            key: i,\n            data: i,\n            for: info.for,\n            label: info.label,\n            value: info.value,\n            disabled: _this3.state.disabled,\n            handleChange: _this3.handleInputChangeKid,\n            size: _this3.state.sizeDropdownSchool,\n            onfocus: function onfocus() {\n              _this3.setState({\n                sizeDropdownSchool: 5\n              });\n            },\n            onblur: function onblur() {\n              _this3.setState({\n                sizeDropdownSchool: 1\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 578\n            },\n            __self: this\n          }, info.options.map(function (item, j) {\n            return React.createElement(OptionForDropdown, {\n              option: item.name,\n              value: item.id,\n              key: j,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 592\n              },\n              __self: this\n            });\n          }));\n        }\n      })), this.state.messageSchoolAdded ? React.createElement(\"p\", {\n        className: \"font-weight-bold text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, \"Your school has been added to the dropdown menu!\") : \"\", React.createElement(\"button\", {\n        className: \"mb-2 mt-2 font-weight-bold p-0\",\n        onClick: this.handleAddSchoolOption,\n        style: {\n          border: \"none\",\n          background: \"none\",\n          color: \"#fca33d\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, \"Didn't find your school? Click here to add it!\"), this.state.addSchool ? React.createElement(AddSchool, {\n        toUpdateSchoolList: this.updateSchoolList,\n        toHideAddSchoolForm: this.hideAddSchoolForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }) : \"\"), React.createElement(\"hr\", {\n        style: {\n          border: \"1px solid #176d88\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }), React.createElement(FormButton, {\n        nameButton: \"Go back\",\n        moreClass: \"go-back-btn mr-3 ml-4\",\n        icon: \"fas fa-arrow-circle-left\",\n        handleButtonClick: this.handleGoBackButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }), React.createElement(FormButton, {\n        nameButton: \"I have another kid!\",\n        moreClass: \"add-kid-btn\",\n        icon: \"fas fa-child\",\n        handleButtonClick: this.handleAddKidButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      }), React.createElement(FormButton, {\n        nameButton: \"Sign Up\",\n        moreClass: \"signup-btn ml-3\",\n        icon: \"fas fa-sign-in-alt\",\n        handleButtonClick: this.handleSignUpButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633\n        },\n        __self: this\n      })), React.createElement(FormMessage, {\n        message: this.state.formMessage.message,\n        path: this.props.path,\n        action: this.state.formMessage.action,\n        id: this.state.formMessage.alt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SignUp;\n}(Component); // export the component so it can be used by other files\n\n\nexport default SignUp;","map":{"version":3,"sources":["C:\\Users\\kevin\\Desktop\\apparent_test\\heroku\\PROD_APParent_React\\src\\components\\signUp-Form\\index.js"],"names":["React","Component","FormAction","FormLabel","FormButton","FormMessage","Dropdown","OptionForDropdown","AddSchool","ErrorMessage","API","gradeLevel","Dropzone","statesList","SignUp","state","sizeDropdownState","sizeDropdownGrade","sizeDropdownSchool","allUsernames","allEmails","parentInfo","for","label","placeholder","value","options","kidInfo","numberOfKid","allKidsInfo","formMessage","message","action","alt","hasError","firstStepRegistration","passwordTooShort","usernameAlreadyExists","emailAlreadyExists","emailNotCorrectFormat","addKid","addSchool","messageSchoolAdded","handleInputChangeParent","event","target","key","getAttribute","copy","setState","handleImageChange","url","handleContinueButtonClick","preventDefault","indexOf","test","length","console","log","handleGoBackButtonClick","handleInputChangeKid","handleAddKidButtonClick","copyKid","push","name","grade","schoolId","handleSignUpButtonClick","signup","userName","password","email","photoLink","city","then","res","window","location","reload","catch","err","handleAddSchoolOption","hideAddSchoolForm","updateSchoolList","getAllSchools","data","handleCloseButtonClick","resetError","setTimeout","searchAllParentsInDB","i","map","j","info","disabled","item","id","border","background","color","props","path"],"mappings":"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","sourcesContent":["// import all the dependencies\nimport React, { Component } from \"react\";\nimport { FormAction, FormLabel, FormButton, FormMessage, Dropdown, OptionForDropdown } from \"../form\";\nimport AddSchool from \"../add-school\";\nimport ErrorMessage from \"../errorMessage\";\nimport \"./style.css\";\nimport API from \"../../utils/API\";\nimport gradeLevel from \"../../gradeLevel.json\";\nimport Dropzone from \"../drop-zone\";\n\n\nconst statesList = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"];\n\n// define a class SignUp to create the component\nclass SignUp extends Component {\n\n    state = {\n        sizeDropdownState: 1,\n        sizeDropdownGrade: 1,\n        sizeDropdownSchool: 1,\n        allUsernames: [],\n        allEmails: [],\n        parentInfo:\n            [\n                {\n                    for: \"userName\",\n                    label: \"Enter a username\",\n                    placeholder: \"username\",\n                    value: \"\"\n                },\n                {\n                    for: \"password\",\n                    label: \"Enter your password (at least 8 characters)\",\n                    placeholder: \"password\",\n                    value: \"\"\n                },\n                {\n                    for: \"email\",\n                    label: \"Enter your email\",\n                    placeholder: \"example@email.com\",\n                    value: \"\"\n                },\n                {\n                    for: \"photo\",\n                    label: \"Enter a link for your profile picture\",\n                    placeholder: \"https://www.picture-of-me.png\",\n                    value: \"\"\n                },\n                {\n                    for: \"city\",\n                    label: \"Which city do you live in?\",\n                    placeholder: \"city\",\n                    value: \"\",\n                },\n                {\n                    for: \"state\",\n                    label: \"Which state do you live in?\",\n                    value: \"Alabama\",\n                    options: statesList\n                }\n            ],\n        kidInfo:\n            [\n                {\n                    for: \"name\",\n                    label: \"Enter the name of your kid\",\n                    placeholder: \"kid's name\",\n                    value: \"\"\n                },\n                {\n                    for: \"grade\",\n                    label: \"Which grade is your kid in?\",\n                    value: \"1\",\n                    options: gradeLevel\n\n                },\n                {\n                    for: \"school\",\n                    label: \"Which school does your kid go to?\",\n                    value: \"1\",\n                    options: []\n                }\n            ],\n        numberOfKid: 1,\n        allKidsInfo: [],\n        formMessage:\n        {\n            message: \"Already Have An Account?\",\n            action: \"Login\",\n            alt: \"login\"\n        },\n        hasError: false,\n        firstStepRegistration: true,\n        passwordTooShort: false,\n        usernameAlreadyExists: false,\n        emailAlreadyExists: false,\n        emailNotCorrectFormat: false,\n        addKid: false,\n        addSchool: false,\n        messageSchoolAdded: false\n    };\n\n    componentDidMount() {\n        // retrieves all the schools\n        API.getAllSchools()\n            .then(\n                res => {\n                    console.log(res.data);\n                    let copy = [...this.state.kidInfo];\n                    copy[2].options = res.data;\n                    this.setState({\n                        kidInfo: copy\n                    })\n                }\n            )\n            .catch(err => console.log(err));\n\n        // get the info of the parents already in the database - to check username and email\n        API.searchAllParentsInDB()\n            .then(\n                res => {\n                    console.log(res.data);\n                    // push into an array all the usernames and emails already in the database\n                    for (var i = 0; i < res.data.length; i++) {\n                        this.state.allUsernames.push(res.data[i].userName);\n                        this.state.allEmails.push(res.data[i].email);\n                    }\n                    console.log(this.state.allUsernames);\n                    console.log(this.state.allEmails);\n                }\n            )\n    }\n\n    // to grab the parent's input about her/himself\n    handleInputChangeParent = event => {\n        const value = event.target.value;\n        const key = event.target.getAttribute(\"data-id\")\n        let copy = [...this.state.parentInfo]\n        copy[key].value = value\n        this.setState({\n            parentInfo: copy,\n            sizeDropdownState: 1\n        });\n    }\n\n    handleImageChange = (url) => {\n        let copy = [...this.state.parentInfo]\n        copy[3].value = url\n        this.setState({\n            parentInfo: copy\n        })\n    }\n\n    // to go to the second part of the registration once validating all the data related to the parents\n    handleContinueButtonClick = event => {\n        event.preventDefault();\n\n        // if all the fields have been filled up\n        if (this.state.parentInfo[0].value && this.state.parentInfo[1].value && this.state.parentInfo[2].value && this.state.parentInfo[3].value && this.state.parentInfo[4].value && this.state.parentInfo[5].value) {\n            // if username doesn't already exist in the database\n            if (this.state.allUsernames.indexOf(this.state.parentInfo[0].value) === -1) {\n                // if the email is in a correct format\n                if (/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/.test(this.state.parentInfo[2].value)) {\n                    // if the email doesn't already exist in the database\n                    if (this.state.allEmails.indexOf(this.state.parentInfo[2].value) === -1) {\n                        // if the password is at least 8 characters long\n                        if (this.state.parentInfo[1].value.length >= 8) {\n                            // display the second part of the form\n                            this.setState({\n                                firstStepRegistration: false\n                            });\n                            console.log(\"parent info: \", this.state.parentInfo);\n                            // if password too short\n                        } else {\n                            // display error message\n                            this.setState({\n                                passwordTooShort: true\n                            });\n                        }\n                        // if the email is already present in the database\n                    } else {\n                        this.setState({\n                            emailAlreadyExists: true\n                        });\n                    }\n                    // if the email doesn't have the correct format\n                } else {\n                    this.setState({\n                        emailNotCorrectFormat: true\n                    });\n                }\n                // if username is already present in the database\n            } else {\n                // display error message\n                this.setState({\n                    usernameAlreadyExists: true\n                });\n            }\n            // if all the fields haven't been filled up\n        } else {\n            // display error message\n            this.setState({\n                hasError: true\n            })\n        }\n    }\n\n    // to allow the parent to go back the first part of the registration\n    handleGoBackButtonClick = event => {\n        event.preventDefault();\n\n        this.setState({\n            firstStepRegistration: true\n        })\n    }\n\n    // to grab the parent's input about the kid\n    handleInputChangeKid = event => {\n        const value = event.target.value;\n        const key = event.target.getAttribute(\"data-id\")\n        let copy = [...this.state.kidInfo]\n        copy[key].value = value\n        this.setState({\n            kidInfo: copy,\n            sizeDropdownGrade: 1,\n            sizeDropdownSchool: 1\n        });\n    }\n\n    // to reset the kid form if the parent has more than one kid\n    handleAddKidButtonClick = event => {\n        event.preventDefault();\n\n        // if the parent clicks the \"add kid\" button after entering info for the first kid, it will proceed\n        if (this.state.kidInfo[0].value && this.state.kidInfo[1].value && this.state.kidInfo[2].value) {\n            // copy the kidInfo\n            let copyKid = [...this.state.kidInfo];\n            // store the current kidInfo into the allKidInfo variable\n            this.state.allKidsInfo.push(\n                {\n                    name: copyKid[0].value,\n                    grade: copyKid[1].value,\n                    schoolId: copyKid[2].value\n                }\n            );\n            // clear the fields for kid form\n            copyKid[0].value = \"\";\n            copyKid[1].value = \"1\";\n            copyKid[2].value = \"1\";\n            // update kidInfo to get empty fields in form, add 1 kid to the counter and \n            // display new registration form for the other kid\n            this.setState({\n                kidInfo: copyKid,\n                numberOfKid: this.state.numberOfKid + 1,\n                addKid: true,\n                messageSchoolAdded: false,\n                addSchool: false\n            });\n            // otherwise will get error message that the parent has to fill up the fields\n        } else {\n            this.setState({\n                hasError: true\n            });\n        }\n    }\n\n    // to sign up\n    handleSignUpButtonClick = event => {\n        event.preventDefault();\n\n        // if the parent signs up without adding another kid or after adding a the last kid - grab the only (or last) kidInfo here\n        let copyKid = [...this.state.kidInfo];\n        this.state.allKidsInfo.push(\n            {\n                name: copyKid[0].value,\n                grade: copyKid[1].value,\n                schoolId: copyKid[2].value\n            }\n        );\n\n        // console log for checking\n        console.log(\"all kid info: \", this.state.allKidsInfo);\n\n        // the parent has to enter info in every field to be able to submit form\n        if (this.state.kidInfo[0].value && this.state.kidInfo[1].value && this.state.kidInfo[2].value) {\n\n            API.signup(\n                {\n                    userName: this.state.parentInfo[0].value,\n                    password: this.state.parentInfo[1].value,\n                    email: this.state.parentInfo[2].value,\n                    photoLink: this.state.parentInfo[3].value,\n                    city: this.state.parentInfo[4].value,\n                    state: this.state.parentInfo[5].value,\n                    allKidsInfo: this.state.allKidsInfo\n                }\n            )\n                .then(res => {\n                    window.location.reload()\n                })\n                .catch(err => console.log(err))\n            // otherwise will get error message that the parent has to fill up the fields\n        } else {\n\n            this.setState({\n                hasError: true\n            })\n        }\n    }\n\n    // to display the add-school form\n    handleAddSchoolOption = event => {\n        event.preventDefault();\n\n        this.setState({\n            addSchool: true,\n            messageSchoolAdded: false\n        })\n\n    }\n\n    // to hide the add-school form - function passed to the add-school component\n    hideAddSchoolForm = event => {\n        event.preventDefault();\n\n        this.setState({\n            addSchool: false,\n        })\n    }\n\n    // function to update the school list once/if a parent has created one\n    updateSchoolList = () => {\n        API.getAllSchools()\n            .then(\n                res => {\n                    console.log(res.data);\n                    let copy = [...this.state.kidInfo];\n                    copy[2].options = res.data;\n                    this.setState({\n                        kidInfo: copy,\n                        addSchool: false,\n                        messageSchoolAdded: true\n                    })\n\n                }\n            )\n            .catch(err => console.log(err));\n    }\n\n    // to close the error message\n    handleCloseButtonClick = event => {\n        event.preventDefault();\n\n        this.setState({\n            hasError: false,\n            passwordTooShort: false,\n            usernameAlreadyExists: false,\n            emailAlreadyExists: false,\n            emailNotCorrectFormat: false\n        })\n    }\n\n    // to make the error message disappear after 2 seconds\n    resetError = () => {\n        if (this.state.hasError || this.state.passwordTooShort || this.state.usernameAlreadyExists || this.state.emailAlreadyExists || this.state.emailNotCorrectFormat) {\n            setTimeout(() => {\n                this.setState({\n                    hasError: false,\n                    passwordTooShort: false,\n                    usernameAlreadyExists: false,\n                    emailAlreadyExists: false,\n                    emailNotCorrectFormat: false\n                })\n            }, 2000)\n        }\n    }\n\n\n    render() {\n        this.resetError();\n        return (\n            <div>\n                {(this.state.firstStepRegistration) ? (\n                    <div>\n                        {(this.state.hasError) ? (\n                            <ErrorMessage\n                                message=\"Please fill out all the fields!\"\n                                handleCloseButtonClick={this.handleCloseButtonClick}\n                            />\n                        ) : (\n                                \"\"\n                            )}\n                        {(this.state.passwordTooShort) ? (\n                            <ErrorMessage\n                                message=\"Your password should be at least 8 characters long!\"\n                                handleCloseButtonClick={this.handleCloseButtonClick}\n                            />\n                        ) : (\n                                \"\"\n                            )}\n                        {(this.state.usernameAlreadyExists) ? (\n                            <ErrorMessage\n                                message=\"Sorry, this username is already taken!\"\n                                handleCloseButtonClick={this.handleCloseButtonClick}\n                            />\n                        ) : (\n                                \"\"\n                            )}\n                        {(this.state.emailAlreadyExists) ? (\n                            <ErrorMessage\n                                message=\"Sorry, a parent already registered with this email!\"\n                                handleCloseButtonClick={this.handleCloseButtonClick}\n                            />\n                        ) : (\n                                \"\"\n                            )}\n                        {(this.state.emailNotCorrectFormat) ? (\n                            <ErrorMessage\n                                message=\"Please enter a correct email!\"\n                                handleCloseButtonClick={this.handleCloseButtonClick}\n                            />\n                        ) : (\n                                \"\"\n                            )}\n                        <FormAction>\n                            {this.state.parentInfo.map((parentInfo, i) => {\n                                if (parentInfo.for === \"state\") {\n                                    return (\n                                        <Dropdown\n                                            key={i}\n                                            data={i}\n                                            for={parentInfo.for}\n                                            label={parentInfo.label}\n                                            value={parentInfo.value}\n                                            handleChange={this.handleInputChangeParent}\n                                            size={this.state.sizeDropdownState}\n                                            onfocus={()=>{this.setState({sizeDropdownState: 5})}}\n                                            onblur={()=>{this.setState({sizeDropdownState: 1})}}\n                                        >\n                                            {parentInfo.options.map((state, j) => {\n                                                return (\n                                                    <OptionForDropdown option={state} value={state} key={j} />\n                                                )\n                                            })}\n                                        </Dropdown>\n                                    );\n                                    // return (\n                                    //     <FormLabel\n                                    //         key={i}\n                                    //         data={i}\n                                    //         for={parentInfo.for}\n                                    //         label={parentInfo.label}\n                                    //         placeholder={parentInfo.placeholder}\n                                    //         value={parentInfo.value}\n                                    //         handleChange={this.handleInputChangeParent}\n                                    //     />\n                                    // );\n                                } else if (parentInfo.for === \"photo\") {\n                                    return (\n                                        <div className=\"mb-3\">\n                                            <label>Upload a profile picture (will be displayed)</label>\n                                            <Dropzone \n                                            helper={this.handleImageChange}\n                                            />\n                                        </div>\n                                    )\n                                } else {\n                                    return (\n                                        <FormLabel\n                                            key={i}\n                                            data={i}\n                                            for={parentInfo.for}\n                                            label={parentInfo.label}\n                                            placeholder={parentInfo.placeholder}\n                                            value={parentInfo.value}\n                                            handleChange={this.handleInputChangeParent}\n                                        />\n                                    )\n                                    // return (\n                                    //     <Dropdown\n                                    //         key={i}\n                                    //         data={i}\n                                    //         for={parentInfo.for}\n                                    //         label={parentInfo.label}\n                                    //         value={parentInfo.value}\n                                    //         handleChange={this.handleInputChangeParent}\n                                    //     >\n                                    //         {parentInfo.options.map((state, j) => {\n                                    //             return (\n                                    //                 <OptionForDropdown option={state} value={state} key={j} />\n                                    //             )\n                                    //         })}\n                                    //     </Dropdown>\n                                    // );\n                                }\n                            })}\n\n                        </FormAction>\n                        <FormButton\n                            nameButton=\"Continue\"\n                            moreClass=\"continue-btn\"\n                            icon=\"fas fa-arrow-circle-right\"\n                            handleButtonClick={this.handleContinueButtonClick}\n                        />\n                    </div>\n                ) : (\n                    <div>\n                        {(this.state.hasError) ? (\n                            <ErrorMessage\n                                message=\"Please fill up all the fields!\"\n                                handleCloseButtonClick={this.handleCloseButtonClick}\n                            />\n                        ) : (\n                            \"\"\n                        )}\n                        <FormAction>\n                            {(!this.state.addKid) ? (\n                                <div>\n                                    <div className=\"font-weight-bold mb-2\">Enter information for kid #1</div>\n                                    {this.state.kidInfo.map((info, i) => {\n                                        if (info.for === \"name\") {\n                                            return (\n                                                <FormLabel\n                                                    key={i}\n                                                    data={i}\n                                                    for={info.for}\n                                                    label={info.label}\n                                                    value={info.value}\n                                                    handleChange={this.handleInputChangeKid}\n                                                />\n                                            )\n                                        } else {\n                                            return (\n                                                <Dropdown\n                                                    key={i}\n                                                    data={i}\n                                                    for={info.for}\n                                                    label={info.label}\n                                                    value={info.value}\n                                                    disabled={this.state.disabled}\n                                                    handleChange={this.handleInputChangeKid}\n                                                    size={(info.for === \"grade\") ? this.state.sizeDropdownGrade : this.state.sizeDropdownSchool}\n                                                    onfocus={(info.for === \"grade\") ? ()=>{this.setState({sizeDropdownGrade: 5})} : ()=>{this.setState({sizeDropdownSchool: 5})}}\n                                                    onblur={(info.for === \"grade\") ? ()=>{this.setState({sizeDropdownGrade: 1})} : ()=>{this.setState({sizeDropdownSchool: 1})}}\n                                                >\n                                                    {info.options.map((item, j) => {\n                                                        return (\n                                                            <OptionForDropdown\n                                                                option={item.name}\n                                                                value={item.id}\n                                                                key={j}\n                                                            />\n                                                        )\n                                                    })}\n                                                </Dropdown>\n                                            )\n                                        }\n                                    })}\n                                </div>\n                            ) : (\n                                <div>\n                                    <div className=\"font-weight-bold text-success mb-2\">Information saved for kid #{this.state.numberOfKid - 1}</div>\n                                    <div className=\"font-weight-bold mb-2\"> Enter information for kid #{this.state.numberOfKid}</div>\n                                    {this.state.kidInfo.map((info, i) => {\n                                        if (info.for === \"name\") {\n                                            return (\n                                                <FormLabel\n                                                    key={i}\n                                                    data={i}\n                                                    for={info.for}\n                                                    label={info.label}\n                                                    value={info.value}\n                                                    handleChange={this.handleInputChangeKid}\n                                                />\n                                            )\n                                        } else {\n                                            return (\n                                                <Dropdown\n                                                    key={i}\n                                                    data={i}\n                                                    for={info.for}\n                                                    label={info.label}\n                                                    value={info.value}\n                                                    disabled={this.state.disabled}\n                                                    handleChange={this.handleInputChangeKid}\n                                                    size={this.state.sizeDropdownSchool}\n                                                    onfocus={()=>{this.setState({sizeDropdownSchool: 5})}}\n                                                    onblur={()=>{this.setState({sizeDropdownSchool: 1})}}\n                                                >\n                                                    {info.options.map((item, j) => {\n                                                        return (\n                                                            <OptionForDropdown\n                                                                option={item.name}\n                                                                value={item.id}\n                                                                key={j}\n                                                            />\n                                                        )\n                                                    })}\n                                                </Dropdown>\n                                            )\n                                        }\n                                    })}\n                                </div>\n                            )}\n                            {this.state.messageSchoolAdded ? (\n                                <p className=\"font-weight-bold text-success\">Your school has been added to the dropdown menu!</p>\n                            ) : (\n                                \"\"\n                            )}\n                            <button className=\"mb-2 mt-2 font-weight-bold p-0\" onClick={this.handleAddSchoolOption} style={{ border: \"none\", background: \"none\", color: \"#fca33d\" }}>Didn't find your school? Click here to add it!</button>\n                            {this.state.addSchool ? (\n                                <AddSchool\n                                    toUpdateSchoolList={this.updateSchoolList}\n                                    toHideAddSchoolForm={this.hideAddSchoolForm}\n                                />\n                            ) : (\n                                \"\"\n                            )}\n                        </FormAction>\n                        <hr style={{ border: \"1px solid #176d88\" }}></hr>\n                        <FormButton\n                            nameButton=\"Go back\"\n                            moreClass=\"go-back-btn mr-3 ml-4\"\n                            icon=\"fas fa-arrow-circle-left\"\n                            handleButtonClick={this.handleGoBackButtonClick}\n                        />\n                        <FormButton\n                            nameButton=\"I have another kid!\"\n                            moreClass=\"add-kid-btn\"\n                            icon=\"fas fa-child\"\n                            handleButtonClick={this.handleAddKidButtonClick}\n                        />\n                        <FormButton\n                            nameButton=\"Sign Up\"\n                            moreClass=\"signup-btn ml-3\"\n                            icon=\"fas fa-sign-in-alt\"\n                            handleButtonClick={this.handleSignUpButtonClick}\n                        />\n                    </div>\n                )}\n                <FormMessage\n                    message={this.state.formMessage.message}\n                    path={this.props.path}\n                    action={this.state.formMessage.action}\n                    id={this.state.formMessage.alt}\n                />\n            </div>\n        );\n    }\n\n}\n\n\n// export the component so it can be used by other files\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}