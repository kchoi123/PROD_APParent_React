{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\kevin\\\\Desktop\\\\apparent_test\\\\heroku\\\\PROD_APParent_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\kevin\\\\Desktop\\\\apparent_test\\\\heroku\\\\PROD_APParent_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kevin\\\\Desktop\\\\apparent_test\\\\heroku\\\\PROD_APParent_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kevin\\\\Desktop\\\\apparent_test\\\\heroku\\\\PROD_APParent_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kevin\\\\Desktop\\\\apparent_test\\\\heroku\\\\PROD_APParent_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kevin\\\\Desktop\\\\apparent_test\\\\heroku\\\\PROD_APParent_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Desktop\\\\apparent_test\\\\heroku\\\\PROD_APParent_React\\\\src\\\\components\\\\add-school\\\\index.js\";\n// import all the dependencies\nimport React, { Component } from \"react\";\nimport { FormLabel, FormButton, Dropdown, OptionForDropdown } from \"../form\";\nimport API from \"../../utils/API\";\nimport ErrorMessage from \"../errorMessage\";\nimport \"./style.css\";\nvar statesList = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"]; // define a class AddSchool to create the component\n\nvar AddSchool =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddSchool, _Component);\n\n  function AddSchool() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddSchool);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddSchool)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      sizeDropdownState: 1,\n      schoolInfo: [{\n        for: \"name\",\n        label: \"Enter the name of the school\",\n        placeholder: \"Name\",\n        value: \"\"\n      }, {\n        for: \"streetAddress\",\n        label: \"Enter the street address of the school\",\n        placeholder: \"444 1st Avenue\",\n        value: \"\"\n      }, {\n        for: \"city\",\n        label: \"Enter the city of the school\",\n        placeholder: \"City\",\n        value: \"\"\n      }, {\n        for: \"state\",\n        label: \"Enter the state of the school\",\n        value: \"Alabama\",\n        options: statesList\n      }, {\n        for: \"zipcode\",\n        label: \"Enter the zipcode of the school\",\n        placeholder: \"12345\",\n        value: \"\"\n      }],\n      hasError: false\n    };\n\n    _this.handleInputChangeSchool = function (event) {\n      var value = event.target.value;\n      var key = event.target.getAttribute(\"data-id\");\n\n      var copy = _toConsumableArray(_this.state.schoolInfo);\n\n      copy[key].value = value;\n\n      _this.setState({\n        schoolInfo: copy,\n        sizeDropdownState: 1\n      });\n    };\n\n    _this.handleAddSchoolButtonClick = function (event) {\n      event.preventDefault(); // the parent has to enter info in every field to be able to submit form\n\n      if (_this.state.schoolInfo[0].value && _this.state.schoolInfo[1].value && _this.state.schoolInfo[2].value && _this.state.schoolInfo[3].value && _this.state.schoolInfo[4].value) {\n        // grab the school info and store them in a variable\n        var schoolData = {\n          name: _this.state.schoolInfo[0].value,\n          streetAddress: _this.state.schoolInfo[1].value,\n          city: _this.state.schoolInfo[2].value,\n          state: _this.state.schoolInfo[3].value,\n          zipcode: _this.state.schoolInfo[4].value\n        };\n        console.log(\"school data: \", schoolData); // api call to create the school in the database\n\n        API.createSchool(schoolData).then(function (res) {\n          console.log(\"School created in DB!\"); // update the dropdown menu for the schools - method defined on the signUp-form component\n\n          _this.props.toUpdateSchoolList();\n        }).catch(function (err) {\n          return console.log(err);\n        }); // otherwise will get error message that the parent has to fill up the fields\n      } else {\n        _this.setState({\n          hasError: true\n        });\n      }\n    };\n\n    _this.handleCloseButtonClick = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        hasError: false\n      });\n    };\n\n    _this.resetError = function () {\n      if (_this.state.hasError) {\n        setTimeout(function () {\n          _this.setState({\n            hasError: false\n          });\n        }, 2000);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddSchool, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.resetError();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, this.state.hasError ? React.createElement(ErrorMessage, {\n        message: \"Please fill up all the fields!\",\n        handleCloseButtonClick: this.handleCloseButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }) : \"\", this.state.schoolInfo.map(function (schoolInfo, i) {\n        if (schoolInfo.for !== \"state\") {\n          return React.createElement(FormLabel, {\n            key: i,\n            data: i,\n            for: schoolInfo.for,\n            label: schoolInfo.label,\n            placeholder: schoolInfo.placeholder,\n            value: schoolInfo.value,\n            handleChange: _this2.handleInputChangeSchool,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(Dropdown, {\n            key: i,\n            data: i,\n            for: schoolInfo.for,\n            label: schoolInfo.label,\n            value: schoolInfo.value,\n            handleChange: _this2.handleInputChangeSchool,\n            size: _this2.state.sizeDropdownState,\n            onfocus: function onfocus() {\n              _this2.setState({\n                sizeDropdownState: 5\n              });\n            },\n            onblur: function onblur() {\n              _this2.setState({\n                sizeDropdownState: 1\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, schoolInfo.options.map(function (state, j) {\n            return React.createElement(OptionForDropdown, {\n              option: state,\n              value: state,\n              key: j,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157\n              },\n              __self: this\n            });\n          }));\n        }\n      }), React.createElement(FormButton, {\n        nameButton: \"Add school to the list!\",\n        moreClass: \"add-school-btn ml-4 mr-3\",\n        icon: \"fas fa-school\",\n        handleButtonClick: this.handleAddSchoolButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(FormButton, {\n        nameButton: \"Nevermind, I found it!\",\n        moreClass: \"nevermind-btn\",\n        handleButtonClick: this.props.toHideAddSchoolForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddSchool;\n}(Component); // export the component so it can be used by other files\n\n\nexport default AddSchool;","map":{"version":3,"sources":["C:\\Users\\kevin\\Desktop\\apparent_test\\heroku\\PROD_APParent_React\\src\\components\\add-school\\index.js"],"names":["React","Component","FormLabel","FormButton","Dropdown","OptionForDropdown","API","ErrorMessage","statesList","AddSchool","state","sizeDropdownState","schoolInfo","for","label","placeholder","value","options","hasError","handleInputChangeSchool","event","target","key","getAttribute","copy","setState","handleAddSchoolButtonClick","preventDefault","schoolData","name","streetAddress","city","zipcode","console","log","createSchool","then","res","props","toUpdateSchoolList","catch","err","handleCloseButtonClick","resetError","setTimeout","map","i","j","toHideAddSchoolForm"],"mappings":"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","sourcesContent":["// import all the dependencies\nimport React, { Component } from \"react\";\nimport { FormLabel, FormButton, Dropdown, OptionForDropdown } from \"../form\";\nimport API from \"../../utils/API\";\nimport ErrorMessage from \"../errorMessage\";\nimport \"./style.css\";\n\nconst statesList = [\"Alabama\",\"Alaska\",\"Arizona\",\"Arkansas\",\"California\",\"Colorado\",\"Connecticut\",\"Delaware\",\"Florida\",\"Georgia\",\"Hawaii\",\"Idaho\",\"Illinois\",\"Indiana\",\"Iowa\",\"Kansas\",\"Kentucky\",\"Louisiana\",\"Maine\",\"Maryland\",\"Massachusetts\",\"Michigan\",\"Minnesota\",\"Mississippi\",\"Missouri\",\"Montana\",\"Nebraska\",\"Nevada\",\"New Hampshire\",\"New Jersey\",\"New Mexico\",\"New York\",\"North Carolina\",\"North Dakota\",\"Ohio\",\"Oklahoma\",\"Oregon\",\"Pennsylvania\",\"Rhode Island\",\"South Carolina\",\"South Dakota\",\"Tennessee\",\"Texas\",\"Utah\",\"Vermont\",\"Virginia\",\"Washington\",\"West Virginia\",\"Wisconsin\",\"Wyoming\"];\n\n// define a class AddSchool to create the component\nclass AddSchool extends Component {\n\n    state = {\n        sizeDropdownState: 1,\n        schoolInfo :\n            [\n                {\n                    for: \"name\",\n                    label: \"Enter the name of the school\",\n                    placeholder: \"Name\",\n                    value: \"\"\n                },\n                {\n                    for: \"streetAddress\",\n                    label: \"Enter the street address of the school\",\n                    placeholder: \"444 1st Avenue\",\n                    value: \"\"\n                },\n                {\n                    for: \"city\",\n                    label: \"Enter the city of the school\",\n                    placeholder: \"City\",\n                    value: \"\"\n                },\n                {\n                    for: \"state\",\n                    label: \"Enter the state of the school\",\n                    value: \"Alabama\",\n                    options: statesList\n                },\n                {\n                    for: \"zipcode\",\n                    label: \"Enter the zipcode of the school\",\n                    placeholder: \"12345\",\n                    value: \"\"\n                }\n\n            ],\n        hasError: false\n    }\n\n    handleInputChangeSchool = event => {\n        const value = event.target.value;\n        const key = event.target.getAttribute(\"data-id\")\n        let copy = [...this.state.schoolInfo]\n        copy[key].value = value\n        this.setState({\n            schoolInfo: copy,\n            sizeDropdownState: 1\n        });\n    }\n\n    handleAddSchoolButtonClick = event => {\n        event.preventDefault();\n\n        // the parent has to enter info in every field to be able to submit form\n        if (this.state.schoolInfo[0].value && this.state.schoolInfo[1].value && this.state.schoolInfo[2].value && this.state.schoolInfo[3].value && this.state.schoolInfo[4].value) {\n\n            // grab the school info and store them in a variable\n            const schoolData = {\n                name: this.state.schoolInfo[0].value,\n                streetAddress: this.state.schoolInfo[1].value,\n                city: this.state.schoolInfo[2].value,\n                state: this.state.schoolInfo[3].value,\n                zipcode: this.state.schoolInfo[4].value\n            }\n\n            console.log(\"school data: \", schoolData);\n\n            // api call to create the school in the database\n            API.createSchool(schoolData)\n                .then( res => {\n                    console.log(\"School created in DB!\");\n                    // update the dropdown menu for the schools - method defined on the signUp-form component\n                    this.props.toUpdateSchoolList();\n                })\n                .catch(err => console.log(err))\n\n        // otherwise will get error message that the parent has to fill up the fields\n        } else {\n\n            this.setState({ \n                hasError: true\n            })\n        }\n    }\n\n    handleCloseButtonClick = event => {\n        event.preventDefault();\n\n        this.setState({\n            hasError: false,\n        })\n    }\n\n    resetError = () => {\n        if (this.state.hasError) {\n            setTimeout(() => {\n                this.setState({\n                    hasError: false,\n                })\n            }, 2000)\n        }\n    }\n\n\n    render() {\n        this.resetError();\n        return (\n            <div>\n                {(this.state.hasError) ? (\n                    <ErrorMessage\n                        message=\"Please fill up all the fields!\"\n                        handleCloseButtonClick={this.handleCloseButtonClick}\n                    />\n                ) : (\n                    \"\"\n                )}\n                {this.state.schoolInfo.map((schoolInfo, i) => {\n                    if (schoolInfo.for !== \"state\") {\n                        return (\n                            <FormLabel\n                                key={i}\n                                data={i}\n                                for={schoolInfo.for}\n                                label={schoolInfo.label}\n                                placeholder={schoolInfo.placeholder}\n                                value={schoolInfo.value}\n                                handleChange={this.handleInputChangeSchool}\n                            />\n                        );\n                    } else {\n                        return (\n                            <Dropdown\n                                key={i}\n                                data={i}\n                                for={schoolInfo.for}\n                                label={schoolInfo.label}\n                                value={schoolInfo.value}\n                                handleChange={this.handleInputChangeSchool}\n                                size={this.state.sizeDropdownState}\n                                onfocus={()=>{this.setState({sizeDropdownState: 5})}}\n                                onblur={()=>{this.setState({sizeDropdownState: 1})}}\n                            >\n                                {schoolInfo.options.map((state, j) => {\n                                    return (\n                                        <OptionForDropdown option={state} value={state} key={j} />\n                                    )\n                                })}\n                            </Dropdown>\n                        );  \n                    }\n                })}\n                <FormButton \n                    nameButton=\"Add school to the list!\"\n                    moreClass=\"add-school-btn ml-4 mr-3\"\n                    icon=\"fas fa-school\"\n                    handleButtonClick={this.handleAddSchoolButtonClick}\n                />\n                <FormButton \n                    nameButton=\"Nevermind, I found it!\"\n                    moreClass=\"nevermind-btn\"\n                    handleButtonClick={this.props.toHideAddSchoolForm}\n                />\n            </div>\n        )\n    }\n\n}\n\n// export the component so it can be used by other files\nexport default AddSchool;"]},"metadata":{},"sourceType":"module"}